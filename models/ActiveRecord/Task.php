<?php

namespace app\models\ActiveRecord;

use app\models\behaviors\RefreshDates;
use Yii;
use yii\behaviors\TimestampBehavior;
use yii\db\Expression;

/**
 * This is the model class for table "task".
 *
 * @property int $id
 * @property string $name
 * @property string $date
 * @property string $description
 * @property int $user_id
 *
 * @property User $user
 */
class Task extends ActiveRecord
{

    const NEW_TASK_CREATED = 'new task created';

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $this->on(self::NEW_TASK_CREATED, [$this, 'sendEmail']);
        //$this->attachBehavior('RefreshDates', ['class' => RefreshDates::class]);
    }

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'task';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['name', 'date'], 'required'],
            //[['date'], 'date', 'format'=>'php:Y-m-d'],
            [['description'], 'string'],
            [['user_id'], 'integer'],
            [['name'], 'string', 'max' => 255],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['user_id' => 'id']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Название',
            'date' => 'Дата окончания',
            'description' => 'Описание',
            'user_id' => 'Пользователь',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(User::className(), ['id' => 'user_id']);
    }

    public static function getActualTasks($user_id)
    {
        return static::find()->where([
            'user_id' => $user_id,
        ])->andWhere("MONTH(`date`) = MONTH(NOW()) AND YEAR(`date`) = YEAR(NOW())");
    }

    public static function getTaskById($id)
    {
        return static::findOne([
            'id' => $id,
        ]);
    }

    public function sendEmail($event) {

        if (($cur_user = User::findOne(\yii::$app->user->id)) !== null) {
            Yii::$app->mailer->compose()
                ->setTo($event->Email)
                ->setFrom([$cur_user->email => $cur_user->login])
                ->setSubject($event->subject)
                ->setTextBody($event->body)
                ->send();
        }

    }

}
